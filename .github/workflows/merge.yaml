name: Merge Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'helper/**'
      - 'internal/**'
      - 'krun-config.json'
      - 'main.go'
      - '**/*.mod'
      - '**/*.sum'

jobs:
  build:
    runs-on: [ubuntu-latest]
    env:
      DOTNET_INSTALL_DIR: './.dotnet'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install DotNet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y zip mingw-w64

      - name: Install golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '6.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true
          configFilePath: .github/gitversion.yaml

      - name: Run Go Build
        env:
          GIT_VERSION: ${{ steps.gitversion.outputs.MajorMinorPatch }}
          GOARCH: amd64
          GOOS: windows
        run: |
          x86_64-w64-mingw32-windres helper/helper.rc -O coff -o helper/resource.syso

          go build -ldflags "-X main.version=$GIT_VERSION" -buildvcs=false -o krun.exe main.go
          go build -C helper -ldflags "-X main.version=$GIT_VERSION" -buildvcs=false -o ../krunhelper.exe helper.go

          zip -r krun_windows_$GOARCH.zip krun.exe krunhelper.exe

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.gitversion.outputs.MajorMinorPatch }}
          name: Release ${{ steps.gitversion.outputs.MajorMinorPatch }}
          generateReleaseNotes: true
          artifacts: krun_*.zip
